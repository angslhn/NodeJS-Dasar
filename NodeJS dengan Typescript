# Initialisasi Project Node.js
npm init

# Install Typescript
npm install --save-dev typescript ts-node @types/node

# Initialisasi Typescript
npx tsc --init

# Install Express
npm install express
npm install @types/express

# Install Cors
npm install cors
npm install --save-dev @types/cors

# Install DotEnv (Environment Variables)
npm install dotenv

# Install Prettier
npm install --save-dev prettier

# Install Alias Import
npm install module-alias
npm install --save-dev @types/module-alias

# Install Jest
npm install --save-dev jest ts-jest @types/jest

# Initialisasi Jest
npm init jest@latest

# Install Nodemon
npm install --save-dev nodemon

### Buat dan konfigurasi file: nodemon.json
──────────────────────────────────────────────────────────────────
│{
│  "watch": ["src"],
│  "ext": "js, ts, json",
│  "ignore": ["node_modules", "*.test.ts"],
│  "exec": "tsc && node ./dist/index.js"
│}

### Buat dan konfigurasi file: .prettierrc
──────────────────────────────────────────────────────────────────
│{
│  "semi": true,
│  "singleQuote": true,
│  "tabWidth": 3,
│  "useTabs": false,
│  "trailingComma": "es5",
│  "printWidth": 300,
│  "bracketSpacing": true
│}

### Buat dan konfigurasi file: .vscode/settings.json
──────────────────────────────────────────────────────────────────
│{
│  "editor.formatOnSave": true,
│  "[typescript]": {
│    "editor.defaultFormatter": "esbenp.prettier-vscode"
│  }
│}

### Salin dan timpa sebagian ke konfigurasi file: package.json
──────────────────────────────────────────────────────────────────
│{
│ .
│ .
│ .
│ "type": "commonjs",
│ "main": "./src/index.ts",
│ "scripts": {
│    "build": "tsc",
│    "dev": "nodemon",
│    "start": "node dist/index.js",
│    "test": "jest",
│    "test:watch": "jest --watch",
│    "test:cov": "jest --coverage",
│    "format": "prettier --write ."
│ },
│ "_moduleAliases": {
│   "@": "./src"
│ },
  .
  .
  .
│}

### Konfigurasi file: tsconfig.json
──────────────────────────────────────────────────────────────────
│{
│ {
│   /* Projects */
│    "incremental": true,
│
│   /* Language and Environment */
│    "target": "es2020",
│
│   /* Modules */
│   "module": "commonjs",
│   "moduleResolution": "node",
│   "baseUrl": ".",
│   "paths": {
│     "@/*": ["src/*"]
│   },
│   "resolveJsonModule": true 
│
│   /* Emit */
│   "outDir": "dist"
│
│   /* Interop Constraints */
│   "esModuleInterop": true
│   "forceConsistentCasingInFileNames": true
│
│   /* Type Checking */
│   "strict": true
│   "noUnusedLocals": true
│   "noUnusedParameters": true
│
│   /* Completeness */
│   "skipLibCheck": true
│ },
│ "include": ["src/**/*"],
│ "exclude": ["**/*.test.ts", "**/*.spec.ts", "**/__tests__/**", "jest.config.ts", "node_modules", "dist"]
│}

### Konfigurasi file: jest.config.ts
──────────────────────────────────────────────────────────────────
│import type { Config } from 'jest';
│
│const config: Config = {
│   clearMocks: true,
│   collectCoverage: true,
│   coverageDirectory: 'coverage',
│   coverageProvider: 'v8',
│   moduleFileExtensions: ['js', 'ts', 'json', 'node'],
│   moduleNameMapper: {
│     '^@/(.*)$': '<rootDir>/src/$1',
│   },
│   preset: 'ts-jest',
│   transform: {
│     '^.+\\.ts$': 'ts-jest',
│   }
│};
│
│export default config;

### Konfigurasi file: .prettierignore
──────────────────────────────────────────────────────────────────
│ node_modules/
│ dist/

### Konfigurasi file: .gitignore
──────────────────────────────────────────────────────────────────
│ node_modules/
│ 
│ # - Folder hasil build (dari tsconfig "outDir")
│ dist/
│ build/
│ # - TypeScript cache
│ *.tsbuildinfo
│ 
│ # - Output dari debugging / logs
│ npm-debug.log*
│ yarn-debug.log*
│ yarn-error.log*
│ pnpm-debug.log*
│ 
│ # - Environment variable
│ .env
│ .env.local
│ .env.*.local
│ 
│ # - Editor / OS files
│ .DS_Store
│ Thumbs.db
│ 
│ # - VSCode settings (opsional, kalau team pakai setting berbeda)
│ .vscode/
│ 
│ # - Coverage results
│ coverage/
│ 
│ # - Optional: hasil testing / cache
│ jest-cache/
│ jest-output/
│ .cache/
│ nyc_output/
│ 
│ # - Lint / format
│ .eslintcache
│ 
│ # - Misc
│ *.log